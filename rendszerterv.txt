Rendszerterv tartalomjegyzék:
- Vágyálom rendszer
- Tesztek
- Teszt terv
- Adatbázis kapcsolat

Vágyálom rendszer:

A hírek olvasása fontos, ezáltal mûvelõdhetünk, tájékozódhatunk a világunk problémáiról vagy épp örömhíreirõl.
Ezt mi lehetõvé tennénk mindenkinek egy kényelmes és felhasználóbarát környezetben.

Weblapunkat html és php kódolás segítségével hoznánk létre, melyben css formázást használnánk.

Ezen felül a híreket beimportálnánk valamint saját forrásból is írnánk.

Phpmyadmin segítségével teremtünk adatbázis kapcsolatot, ahol a szerkesztõket tároljuk nevük, email címük, jelszavuk alapján.

A design minimalista, egy átlagos külsõvel rendelkezõ weboldalt szeretnénk fejleszteni a hírek középpontba helyezésével

A hírekhez lehetne hozzászólni, reagálni rájuk.
Be lehetne küldeni új híreket, hogy naprakészek lehessünk.

A szerkesztõknek lehetõsége van belépni, ezáltál teljes hozzáférést kapniuk az oldal kezeléséhez.








Tesztek:Teszt 1.
A teszt-eset leírás és célja:A teszttel a program hibáit szeretnénk kiküszöbölni, illetve mûködõ részeit lezártnak tekinteni

A tesztterv alapját a dokumentumok képezik, ezek alapján futjuk át a projektet.

A tesztelt folyamat/funkció leírása:Az oldal külsõleg hibátlan.
A designak megfelelt.

A tesztelés elõfeltételei:Tesztkörnyezet, szükséges erõforrások

-Dokumentációk ismerete
-Wamp
A tesztelés dátuma és idõpontja:2019.12.08

A tesztet végzõ személy(ek):Szabó Patrik

A tesztelt rendszer beállításai:phpmyadmin az oldal és adatbázis hozzáféréséhez
-db nevû mappában található hirek

A tesztelés eredménye:Megfelelt.

Teszt 2.
A teszt-eset leírás és célja:A teszttel a program hibáit szeretnénk kiküszöbölni, illetve mûködõ részeit lezártnak tekinteni

A tesztterv alapját a dokumentumok képezik, ezek alapján futjuk át a projektet.

A tesztelt folyamat/funkció leírása:phpmyadmin alapbeállítások
db mappába levõ connection.php, és hirek.sql file
admin@admin.com email, admin jelszó


-Dokumentációk ismerete
-Wamp
A tesztelés dátuma és idõpontja:2019.12.08

A tesztet végzõ személy(ek):Szabó Patrik

A tesztelt rendszer beállításai:phpmyadmin alapbeállítások
db mappába levõ connection.php, és hirek.sql file
admin@admin.com email, admin jelszó


A tesztelés eredménye:Megfelelt.

Teszt 3.
A teszt-eset leírás és célja:A teszttel a program hibáit szeretnénk kiküszöbölni, illetve mûködõ részeit lezártnak tekinteni

A tesztterv alapját a dokumentumok képezik, ezek alapján futjuk át a projektet.

A tesztelt folyamat/funkció leírása:Bejelentkezés

-Dokumentációk ismerete
-Wamp
A tesztelés dátuma és idõpontja:2020.01.16.

A tesztet végzõ személy(ek):Belkovics Dénes

A tesztelt rendszer beállításai:phpmyadmin alapbeállítások
db mappába levõ connection.php, és hirek.sql file
admin@admin.com email, admin jelszó


A tesztelés eredménye:Megfelelt.

Teszt 4.

A teszt-eset leírás és célja:A teszttel a program hibáit szeretnénk kiküszöbölni, illetve mûködõ részeit lezártnak tekinteni

A tesztterv alapját a dokumentumok képezik, ezek alapján futjuk át a projektet.

A tesztelt folyamat/funkció leírása:Feltöltés validációi 

-Dokumentációk ismerete
-Wamp
A tesztelés dátuma és idõpontja:2020.01.16.

A tesztet végzõ személy(ek):Szabó Nóra

A tesztelt rendszer beállításai:- Téma kiválasztottalanul hagyása esetén hiba
- Túl rövid cím esetén hiba
- Túl hosszú cím esetén hiba
- Túl rövid tartalom esetén hiba
- Megfelelõ témához való feltöltés
- Megfelelõ témánál való megjelenítés



A tesztelés eredménye:Megfelelt.

Teszt 5.

A teszt-eset leírás és célja:A teszttel a program hibáit szeretnénk kiküszöbölni, illetve mûködõ részeit lezártnak tekinteni

A tesztterv alapját a dokumentumok képezik, ezek alapján futjuk át a projektet.

A tesztelt folyamat/funkció leírása:Adatbázisba feltöltés validálás után

-Dokumentációk ismerete
-Wamp
A tesztelés dátuma és idõpontja:2020.01.16.

A tesztet végzõ személy(ek):Szabó Nóra

A tesztelt rendszer beállításai:- Validáció sikeressége után a megfelelõtáblába való feltöltés
- Feltöltés után a megfelelõ aloldalon való megjelenítés



A tesztelés eredménye:Megfelelt.



Teszt terv:

A tesztelési terv a tesztelés teljes körûségének biztosítása, a tesztelés során alkalmazott megoldások meghatározásával.
Elvárások: Az olvasó ismeri az alapdokumentumokat, amelyek meghatározzák a rendszert.
Szükséges erõforrások: Létezõ adatbázis, wamp szerver.

A tesztek végrehajtásához szükséges rekordok száma: Legalább egy, minden táblában
	-Az alapadatok értékkészlete az éles rendszerével megegyezõ kell hogy legyen

Az összes teszt dokumentáció elérhetõ ebben a fájlban, vagy a gyökérmappában.

Tesztelési eszköz: Különféle adatokkal és állapotokkal vizsgáljuk a kimenetet egy adott bemenetre.

Teszt típusa: unittesztek, modultesztek. A teszteknek meg kell felelniük a kritériumoknak, értesíteniük kell a felhasználót hiba esetén,
formailag meg kell felelniük, és funkcionálisan is a lehetõ leghatékonyabbnak kell lennie.

Szükséges lépések:
-Fejlesztõi teszt
-Modulteszt
-Integrációs teszt
-Elfogadási teszt

Teszt ütemterv: Új metódus esetén azonnali helyi tesztek, teszt jegyzõkönyv kitöltése ajánlott.
		Hiba esetén a hiba megállapítása, és annak kijavítása
		Kijavítás esetén ujabb jegyzõkönyv készítése

Tesztelési jegyzõkönyvek

Végül pedig jóváhagyás


Adatbázis kapcsolat
Az adatbázis kapcsolatot a wamp szerver és a phpmyadmin segítségével hoztunk létre, melyek lehetõvé tették az adatok tárolását, törlését,
a velük való mûveleteket, megjelenítést. Ezzel plusz munkát spóroltunk meg. Az adatokat egy helyen tudtuk tárolni, jól rendszerezve,
külön táblákban. Ezzel azt is elértük, hogy az egyik futtatáskor bevitt adatok nem vesznek el, így valós adatokkal is dolgozhatunk,
ettõl pedig reálisabb lett a weboldalunk. Két külön táblát használtunk az adatbázisunkban, az egyiket a bejelentkezéshez, a másikat a
hírekhez. Mindkét esetben használtunk kódolást(utf8_hungarian_ci pontosabban), a mezõket pedig az adatbázis táblájához megfelelõen
elneveztük és az ahhoz megfelelõ típust állítottuk be. Fontos volt, hogy az adott típus mérete megfelelõ legyen, figyelnünk kellett a
korlátokra. De ha elrontottuk volna elsõ próbálkozásra, a phpmyadmin adatbázisában is van olyan opció, hogy az adatszerkezetet is lehet
változtatni. Ez nagy hasznunkravált. Lehetõségünk volt a speciális azonosító mezõjét is saját gondolatunk alapján automatikusan növekvõre
és egyedire állítani, így biztosítottuk hogy minden egyes rekordnak legyen egy egyedi azonosítója amivel hivatkozhatunk rá és így biztosan
a jó rekorddal dolgozunk. Ezt úgyértük el, hogy php kódnyelvben, ami az egész weblapunk alapja, hoztunk létre kacsolatot beépített
függvényekkel az adatbázissal. Használtunk lekérdezéseket, de táblamódosító nyelvet is, például a hírek felvitelénél INSERT-et, ami
jelentõsenegyszerûvé tette a dolgunkat. 